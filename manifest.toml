#:schema https://raw.githubusercontent.com/YunoHost/apps/master/schemas/manifest.v2.schema.json

packaging_format = 2

id = "arn_messager"
name = "ARN Messager"
description.en = "ARN Messager is a bot to use in addition of mautrix to allow matrix users without administration right to be connected with a whatsapp group."
description.fr = "ARN Messager est un robot à utiliser en complément de mautrix pour permettre aux utilisateurs de matrix sans droit d'administration d'être connectés à un groupe whatsapp."

version = "1.2~ynh1"

maintainers = ["Thatoo"]

[upstream]
# NB: Only the "license" key is mandatory. Remove entries for which there's no relevant data
license = "AGPL-3.0-or-later" # you can see the available licenses identifiers list here: https://spdx.org/licenses/
admindoc = "https://code.ffdn.org/arn/arn-messager#configuration-file"
userdoc = "https://arn-fai.net/fr/blog/arn-messager-contact-whatsapp-sans-donner-facebook#mise-en-pratique-de-darn-messager"
code = "https://code.ffdn.org/arn/arn-messager"

# FIXME: optional but recommended (or remove if irrelevant / not applicable).
# This is meant to be an URL where people can financially support this app, especially when its development is based
# on volunteers and/or financed by its community. YunoHost may later advertise it in the webadmin.
fund = "https://don.arn-fai.net/"

[integration]
yunohost = ">= 12" # required for python3
# FIXME: can be replaced by a list of supported archs using the dpkg --print-architecture nomenclature (amd64/i386/armhf/arm64), for example: ["amd64", "i386"]
architectures = "all"
multi_instance = false

# FIXME: replace with true, false, or "not_relevant".
# Not to confuse with the "sso" key: the "ldap" key corresponds to wether or not a user *can* login on the app using
# its YunoHost credentials.
ldap = "not_relevant"

# FIXME: replace with true, false, or "not_relevant".
# Not to confuse with the "ldap" key: the "sso" key corresponds to wether or not a user is *automatically logged-in*
# on the app when logged-in on the YunoHost portal.
sso = "not_relevant"

# FIXME: replace with an **estimate** minimum disk and RAM requirements. e.g. 20M, 400M, 1G...
disk = "50M"
ram.build = "50M"
ram.runtime = "50M"

[install]
    [install.language]
    ask.en = "Choose the application language"
    ask.fr = "Choisissez la langue de l'application"
    type = "select"
    choices = ["fr", "en"]
    default = "fr"

    [install.homeserver]
    ask.en = "Choose the local Matrix Home Server instance to communicate with ARN Messager"
    ask.fr = "Choisissez l'instance locale de Home Server Matrix qui doit communiquer avec ARN Messager"
    help.en = "Only synapse supported. If you installed synapse only once, then leave default value synapse."
    help.fr = "Seul Synapse est supporté. Si vous n'avez installé qu'une fois synapse, gardez la valeur par défaut synapse."
    type = "string"
    example = "synapse__2"
    default = "synapse"

    [install.botname]
    ask.en = "Choose a name for the ARN Messager bot"
    ask.fr = "Choisissez un nom pour le robot ARN Messager"
    type = "string"
    example = "ARN Messager"
    default = "ARN Messager"

    [install.botaccount]
    ask.en = "Choose a local synapse user name for the ARN Messager bot"
    ask.fr = "Choisissez un nom d'utilisateur synapse local pour le robot ARN Messager"
    help.en = "A system user will be created. Invite @arnmessager:localsynapse.servername from an authorized Matrix account to start bridging. Give the matrix server_name, not the full domain/url."
    help.fr = "Un utilisateur système sera créé. Inviter @arnmessager:localsynapse.servername depuis un compte Matrix autorisé pour démarrer une passerelle. Donner le nom du serveur matrix, pas le domaine/url complet."
    type = "string"
    example = "arn_messager"
    default = "arn_messager"

    [install.botnumber]
    ask.en = "Phone number of the Signal/Whatsapp relay account. Use +33612345678 formatting"
    ask.fr = "Numéro de téléphone du compte Signal/Whatsapp relai. Au format +33612345678"
    help.en = "You will have to scan the QR code sent by the bridge with the Signal/Whatsapp App linked to this number."
    help.fr = "Il faudra scanner le QR code envoyé par le bridge avec l'appli Signal/Whatsapp liée à ce numéro."
    type = "string"
    example = "+33612345678"
    default = "+33612345678"

    [install.bridge]
    ask.en = "Relay bridge instance to be managed via its bot"
    ask.fr = "Instance de passerelle relai à gérer via son robot"
    help.en = "List of instant messaging (social) network that you want to relay."
    help.fr = "Liste des réseaux (sociaux) de messagerie instantanée que vous voulez relayer."
    type = "string"
    example = "whatsapp"
    default = "signal"

    [install.botusers]
    ask.en = "Choose Matrix instances authorized to invite the ARN Messager bot"
    ask.fr = "Choisissez les instances Matrix autorisées à inviter le robot ARN Messager"
    help.en = "Usually local server. Give the Matrix server_name, not the full domain/URL."
    help.fr = "Typiquement le serveur local. Donner le server_name du serveur Matrix, pas le domaine/URL complet."
    type = "string"
    example = "synapse_server.name"
    default = "domain.tld"

    [install.admins]
    ask.en = "Choose Matrix users or instances authorized to send control commands to the bridges over ARN Messager"
    ask.fr = "Choisissez les comptes ou instances Matrix autorisés à contrôler les passerelles à travers ARN Messager"
    help.en = "Usually local synapse server admin. Give the full Matrix address (MXID)."
    help.fr = "Typiquement les admins du serveur synapse local. Donner l'identifiant Matrix complet (MXID)."
    type = "string"
    example = "@admin:synapse_server.name"
    default = "@admin:domain.tld"

[resources]
    # See the packaging documentation for the full set
    # of explanation regarding the behavior and properties for each of those

    [resources.sources]

    [resources.sources.main]
    # This will pre-fetch the asset which can then be deployed during the install/upgrade scripts with :
    #    ynh_setup_source --dest_dir="$install_dir"
    # You can also define other assets than "main" and add --source_id="foobar" in the previous command
    url = "https://code.ffdn.org/arn/arn-messager/-/archive/testing/arn-messager-testing.tar.gz"
    sha256 = "5868f71f6065abff0e809df1ac5fdc71786b1463b8ab8d546baabbb7b51cca7a"

    # These infos are used by https://github.com/YunoHost/apps/blob/master/tools/autoupdate_app_sources/autoupdate_app_sources.py
    # to auto-update the previous asset urls and sha256sum + manifest version
    # assuming the upstream's code repo is on github and relies on tags or releases
    # See the 'sources' resource documentation for more details

    autoupdate.strategy = "latest_gitlab_release"

    [resources.system_user]
    # This will provision/deprovision a unix system user
    home = "/opt/yunohost/__APP__"

    [resources.install_dir]
    # This will create/remove the install dir as /var/www/$app
    # and store the corresponding setting $install_dir
    dir = "/opt/yunohost/__APP__"

    [resources.apt]
    # This will automatically install/uninstall the following apt packages
    # and implicitly define the $phpversion setting as 8.0 (if phpX.Y-foobar dependencies are listed)
    packages = "python3-venv, python3-pip, python3-wheel, python3-yaml, python3-dnspython, python3-matrix-nio"
